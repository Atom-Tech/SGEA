<Application x:Class="SGEA.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SGEA"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             StartupUri="Janelas\Login.xaml"
             DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <Style x:Key="Alert" TargetType="TextBlock">
            <Setter Property="Text" Value="*Campo obrigatório" />
            <Setter Property="Foreground" Value="Red" />
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="Button">
            <Setter Property="Height" Value="20"/>
            <Setter Property="MinWidth" Value="70" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template" Value="{DynamicResource ButtonTemplate}" />
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/SGEA;component/img/BotaoEstiloRet.png"/>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ButtonBottom" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="0,0,10,10" BorderBrush="DarkGreen" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <ImageBrush ImageSource="/SGEA;component/img/botaodesativado.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonTop" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="10,10,0,0" BorderBrush="DarkGreen" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <ImageBrush ImageSource="/SGEA;component/img/botaodesativado.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <ImageBrush ImageSource="/SGEA;component/img/botaodesativado.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonOnly" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <ImageBrush ImageSource="/SGEA;component/img/botaodesativado.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="TopButton" TargetType="Button">
            <Setter Property="FontWeight" Value="Black"/>
            <Setter Property="Width" Value="23"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Background" Value="#0083CE"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template" Value="{DynamicResource ButtonTemplate}" />
        </Style>
        <Style x:Key="TopButtonX" TargetType="Button" BasedOn="{StaticResource TopButton}">
            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="/SGEA;component/img/X.png"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type toolkit:MessageBox}">
            <Setter Property="Background" Value="#FF9EA8E6" />
            <Setter Property="ButtonRegionBackground" Value="#FF9EA8E6" />
            <Setter Property="BorderBrush" Value="Blue" />
            <Setter Property="WindowBorderBrush" Value="#004DF1" />
            <Setter Property="WindowBackground" Value="#0083CE" />
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="YesButtonContent" Value="Sim" />
            <Setter Property="YesButtonStyle" Value="{DynamicResource ButtonStyle2}"/>
            <Setter Property="NoButtonContent" Value="Não" />
            <Setter Property="NoButtonStyle" Value="{DynamicResource ButtonStyle2}" />
            <Setter Property="OkButtonStyle" Value="{DynamicResource ButtonStyle2}"/>
            <Setter Property="CloseButtonStyle" Value="{DynamicResource TopButtonX}" />
        </Style>
    </Application.Resources>
</Application>